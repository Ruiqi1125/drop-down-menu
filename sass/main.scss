// Imports the Open Sans typeface from Google.
@import '_fonts.scss';

// Imports the variables that define the visual behavior of this menu.
@import '_variables.scss';

// Imports the presentational CSS of this page that has nothing to do with the
// function of this menu.
@import '_base';

nav {
   width: $width-nav;

   // The height of the <nav> must equal the height of the block-level <a> element so
   // content following the <nav> element in the DOM starts rendering underneath
   // the <nav> element. The floated <li> elements cause the wrapping issue here.
   // Thus the need for the $height-nav-item variable.
   height: $height-nav-item;

   a {
      display: block;
      width: $width-nav-item;

      // Ensure that the entire height of nav item is consumed by the line-height
      // of this item. Otherwise, vertical gaps will exist between this item and
      // its parent, the nav element.
      line-height: $height-nav-item;

      &:hover {
         background-color: lighten($color--main-bg, 40%);
      }
   }

   ul {
      padding: 0;
      margin: 0;
      list-style-type: none;

      > li {
         float: left;
         width: $width-nav-item;

         // Because I need the inner unordered list to positionally bind absolutely
         // to this list item, I must set the position property here to relative.
         position: relative;
         background-color: $color-background-nav;

         // Hovering over the top-level <li> element makes visible the nested <ul> element.
         &:hover {
            > ul {
               visibility: visible;
            }
         }

         > ul {
            // Hide these nested unordered lists by default, showing them only when
            // a user hovers over its parent.
            visibility: hidden;

            // By setting this listâ€™s position property to absolute, I allow content
            // to appear underneath the first list, not this one. In doing so, when
            // the user hovers her/his mouse over the primary list items, the
            // secondary nav appears *on top* of the content.
            position: absolute;
            top: $height-nav-item;
            left: 0;

            a {
               // Uncomment both of the following variables, then uncomment and
               // change the value of $height-inner-list-items in _variables.scss to
               // modify the height and vertical alignment of each inner nav item.
               line-height: $height-inner-list-items;
               height: $height-inner-list-items;
            }
         }
      }
   }
}
